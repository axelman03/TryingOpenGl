#version 330

in vec2 pass_textureCoords;

out vec4 out_Color;

uniform vec3 color;
uniform sampler2D fontAtlas;

//Width of solid character - for larger fonts, use slightly higher width values, and vice versa for smaller fonts
uniform float width;  
//the size of the character's edge, to make edge soft - for larger fonts, use smaller edge values, and vice versa for smaller fonts
uniform float edge;  

uniform float borderWidth;  //for outline
uniform float borderEdge;  //Don't let this be 0, it will make some weird results if it is

uniform vec2 offset;

uniform vec3 outlineColor;

void main(void){
	
	float distance1 = 1.0 - texture(fontAtlas, pass_textureCoords).a;
	float alpha = 1.0 - smoothstep(width, width + edge, distance1);
	
	float distance2 = 1.0 - texture(fontAtlas, pass_textureCoords + offset).a;
	float outlineAlpha = 1.0 - smoothstep(borderWidth, borderWidth + borderEdge, distance2);
	
	float overallAlpha = alpha + (1.0 - alpha) * outlineAlpha;
	vec3 overallColor = mix(outlineColor, color, alpha / overallAlpha);
	
	out_Color = vec4(overallColor, overallAlpha);
	
}